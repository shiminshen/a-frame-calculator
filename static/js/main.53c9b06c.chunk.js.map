{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["window","AFRAME","registerState","initialState","calculator","result","tmp","operator","handlers","addNumber","action","value","addDot","indexOf","addOperator","equal","toString","registerComponent","schema","event","type","default","init","this","el","addEventListener","e","scenes","emit","data","BUTTON_BACKGROUND","ButtonPlane","className","opType","position","width","height","depth","text","color","props","class","align","Row0","Row1","Row2","Row3","Row4","bind__value","Calculator","App","cursor","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.53c9b06c.chunk.js","sourcesContent":["import 'aframe'\nimport 'aframe-event-set-component'\nimport 'aframe-state-component'\n\nimport './App.css'\n\nwindow.AFRAME.registerState({\n  initialState: {\n    calculator: {\n      result: '',\n      tmp: '',\n      operator: ''\n    }\n  },\n\n  handlers: {\n    addNumber: ({ calculator }, action) => {\n      if (calculator.operator === '=' && !calculator.tmp) {\n        calculator.result = action.value\n        calculator.operator = ''\n      } else if (calculator.operator && !calculator.tmp) {\n        calculator.tmp = calculator.result\n        calculator.result = action.value\n      } else {\n        calculator.result += action.value\n      }\n    },\n\n    addDot: ({ calculator }, action) => {\n      if (calculator.result && calculator.result.indexOf('.') === -1) {\n        calculator.result += action.value\n      }\n    },\n\n    addOperator: ({ calculator }, action) => {\n      calculator.operator = action.value\n    },\n\n    equal: ({ calculator }, action) => {\n      switch (calculator.operator) {\n        case '+':\n          calculator.result = +calculator.tmp + +calculator.result\n          break\n        case '-':\n          calculator.result = +calculator.tmp - +calculator.result\n          break\n        case '*':\n          calculator.result = +calculator.tmp * +calculator.result\n          break\n        case '/':\n          calculator.result = +calculator.tmp / +calculator.result\n          break\n\n        default:\n      }\n\n      calculator.result = calculator.result.toString()\n      calculator.tmp = ''\n      calculator.operator = '='\n    }\n  }\n})\n\nwindow.AFRAME.registerComponent('click-button', {\n  schema: {\n    event: { type: 'string', default: '' },\n    value: { type: 'string', default: 0 }\n  },\n\n  init: function () {\n    const el = this.el\n    el.addEventListener('click', (e) => {\n      window.AFRAME.scenes[0].emit(this.data.event, { value: this.data.value })\n    })\n  }\n})\n\nconst BUTTON_BACKGROUND = '#3c4043'\nconst BUTTON_BACKGROUND_ACTIVE = '#424548'\n\nconst ButtonPlane = ({\n  className,\n  opType = 'operand',\n  position,\n  width = 1,\n  height = 1,\n  depth = 0.5,\n  color = BUTTON_BACKGROUND,\n  text,\n  ...props\n}) => {\n  return (\n    <a-box\n      class={`${className} button`}\n      opType={opType}\n      position={position}\n      width={width}\n      height={height}\n      color={BUTTON_BACKGROUND}\n      depth={depth}\n      event-set__enter={`_event: mouseenter; color: ${BUTTON_BACKGROUND_ACTIVE}`}\n      event-set__leave={`_event: mouseleave; color: ${BUTTON_BACKGROUND}`}\n      {...props}\n    >\n      <a-text value={text} position=\"0 0 0.25\" align='center'></a-text>\n    </a-box>\n  )\n}\n\nconst Row0 = () => {\n  return (\n    <>\n      <ButtonPlane\n        className=\"operand\"\n        position=\"-1.5 -1 -4\"\n        text=\"0\"\n        click-button=\"event: addNumber; value: 0\"\n      />\n      <ButtonPlane\n        className=\"dot\"\n        position=\"-0.5 -1 -4\"\n        text=\".\"\n        click-button=\"event: addDot; value: .\"\n      />\n      <ButtonPlane\n        className=\"operator\"\n        position=\"0.5 -1 -4\"\n        text=\"=\"\n        click-button=\"event: equal\"\n      />\n      <ButtonPlane\n        className=\"operator\"\n        position=\"1.5 -1 -4\"\n        text=\"+\"\n        click-button=\"event: addOperator; value: +\"\n      />\n    </>\n  )\n}\n\nconst Row1 = () => {\n  return (\n    <>\n      <ButtonPlane\n        className=\"operand\"\n        position=\"-1.5 0 -4\"\n        text=\"1\"\n        click-button=\"event: addNumber; value: 1\"\n      />\n      <ButtonPlane\n        className=\"operand\"\n        position=\"-0.5 0 -4\"\n        text=\"2\"\n        click-button=\"event: addNumber; value: 2\"\n      />\n      <ButtonPlane\n        className=\"operand\"\n        position=\"0.5 0 -4\"\n        text=\"3\"\n        click-button=\"event: addNumber; value: 3\"\n      />\n      <ButtonPlane\n        className=\"operator\"\n        position=\"1.5 0 -4\"\n        text=\"-\"\n        click-button=\"event: addOperator; value: -\"\n      />\n    </>\n  )\n}\n\nconst Row2 = () => {\n  return (\n    <>\n      <ButtonPlane\n        className=\"operand\"\n        position=\"-1.5 1 -4\"\n        text=\"4\"\n        click-button=\"event: addNumber; value: 4\"\n      />\n      <ButtonPlane\n        className=\"operand\"\n        position=\"-0.5 1 -4\"\n        text=\"5\"\n        click-button=\"event: addNumber; value: 5\"\n      />\n      <ButtonPlane\n        className=\"operand\"\n        position=\"0.5 1 -4\"\n        text=\"6\"\n        click-button=\"event: addNumber; value: 6\"\n      />\n      <ButtonPlane\n        className=\"operator\"\n        position=\"1.5 1 -4\"\n        text=\"*\"\n        click-button=\"event: addOperator; value: *\"\n      />\n    </>\n  )\n}\n\nconst Row3 = () => {\n  return (\n    <>\n      <ButtonPlane\n        className=\"operand\"\n        position=\"-1.5 2 -4\"\n        text=\"7\"\n        click-button=\"event: addNumber; value: 7\"\n      />\n      <ButtonPlane\n        className=\"operand\"\n        position=\"-0.5 2 -4\"\n        text=\"8\"\n        click-button=\"event: addNumber; value: 8\"\n      />\n      <ButtonPlane\n        className=\"operand\"\n        position=\"0.5 2 -4\"\n        text=\"9\"\n        click-button=\"event: addNumber; value: 9\"\n      />\n      <ButtonPlane\n        className=\"operator\"\n        position=\"1.5 2 -4\"\n        text=\"/\"\n        click-button=\"event: addOperator; value: /\"\n      />\n    </>\n  )\n}\n\nconst Row4 = () => {\n  return (\n    <a-box position=\"0 3 -4\" width=\"4\" height=\"1\" depth=\"0.5\" color=\"#303134\">\n      <a-text\n        bind__value=\"value: calculator.result\"\n        position=\"1.5 0 0.25\"\n        align=\"right\"\n      ></a-text>\n      <a-text\n        bind__value=\"value: calculator.operator\"\n        position=\"1.75 0 0.25\"\n        align=\"right\"\n      ></a-text>\n    </a-box>\n  )\n}\n\nconst Calculator = () => {\n  return (\n    <a-entity>\n      <Row0 />\n      <Row1 />\n      <Row2 />\n      <Row3 />\n      <Row4 />\n    </a-entity>\n  )\n}\n\nconst App = () => {\n  return (\n    <div className=\"App\">\n      <a-scene>\n        <a-entity cursor=\"rayOrigin:mouse\"></a-entity>\n        <Calculator />\n      </a-scene>\n    </div>\n  )\n}\n\nexport default App\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}